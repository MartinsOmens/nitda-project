import { version } from "react"

explained version

// Importing icons from lucide-react (a modern, lightweight icon library)
import { ChevronDown, Search, Download } from "lucide-react";

// Importing the useState Hook from React to manage component state
import { useState } from "react";

// =============================
// 🧾 Initial Data (Sample Students)
// =============================
// This array simulates attendance data that could later come from a database or API
const initialDetails = [
  {
    id: 1,
    name: "John Doe",
    matricNum: "CSC/2020/001",
    department: "Computer Science",
    track: "AI & Machine Learning",
    event: "AI & Machine Learning Workshop",
    status: "Absent",
  },
  {
    id: 2,
    name: "Jane Smith",
    matricNum: "CSC/2020/002",
    department: "Computer Science",
    track: "AI & Machine Learning",
    event: "AI & Machine Learning Workshop",
    status: "Present",
  },
  {
    id: 3,
    name: "Bob Johnson",
    matricNum: "CSC/2020/003",
    department: "Computer Science",
    track: "Web Development",
    event: "Web Development Bootcamp",
    status: "Absent",
  },
  {
    id: 4,
    name: "Alice Williams",
    matricNum: "CSC/2020/004",
    department: "Computer Science",
    track: "Data Science",
    event: "AI & Machine Learning Workshop",
    status: "Absent",
  },
];

// ====================================
// 🎓 Attendance Component Definition
// ====================================
const Attendance = () => {
  // State variables to store data that can change
  const [details, setDetails] = useState(initialDetails); // stores all students
  const [searchTerm, setSearchTerm] = useState(""); // what user types in search
  const [selectedEvent, setSelectedEvent] = useState("All Events"); // selected dropdown value

  // List of all available events for the dropdown menu
  const events = [
    "All Events",
    "AI & Machine Learning Workshop",
    "Web Development Bootcamp",
  ];

  // ===============================
  // ✅ Function: Toggle attendance status
  // ===============================
  const handleStatusToggle = (id) => {
    // Update the student list by flipping "Present" <-> "Absent" for the clicked student
    setDetails(
      details.map((d) =>
        d.id === id
          ? { ...d, status: d.status === "Present" ? "Absent" : "Present" }
          : d
      )
    );
  };

  // ===============================
  // 🟩 Function: Mark all students present
  // ===============================
  const handleMarkAllPresent = () => {
    // Sets every student's status to "Present"
    setDetails(details.map((d) => ({ ...d, status: "Present" })));
  };

  // ===============================
  // 🔍 Filter Logic (Search + Event)
  // ===============================
  const filteredDetails = details.filter(
    (d) =>
      // Filter by event: if "All Events" is selected, show all students
      (selectedEvent === "All Events" || d.event === selectedEvent) &&
      // Filter by search: check if name or matric number includes search term
      (d.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        d.matricNum.toLowerCase().includes(searchTerm.toLowerCase()))
  );

  // ===============================
  // 🧱 JSX (The Actual UI)
  // ===============================
  return (
    <div className="w-full p-4">
      {/* Page Title */}
      <h2 className="text-2xl font-semibold mb-6 text-gray-700">
        Attendance Info
      </h2>

      {/* ===============================
          🎛️ Filter + Search + Action Buttons Section
         =============================== */}
      <div className="flex flex-col md:flex-row md:items-end md:gap-4 gap-4">
        
        {/* ===============================
            📅 Dropdown: Select Event
           =============================== */}
        <div className="flex flex-col md:flex-1">
          <label
            htmlFor="select-event"
            className="text-gray-700 mb-2 text-lg"
          >
            Select Event
          </label>
          <div className="relative w-full">
            <select
              id="select-event"
              value={selectedEvent}
              onChange={(e) => setSelectedEvent(e.target.value)}
              className="w-full bg-gray-50 text-gray-700 hover:bg-gray-100 transition-colors px-3 py-2 pr-10 rounded-xl border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-400 appearance-none"
            >
              {/* Dynamically render all event options */}
              {events.map((event) => (
                <option key={event} value={event}>
                  {event}
                </option>
              ))}
            </select>
            {/* Dropdown arrow icon */}
            <ChevronDown className="w-5 h-5 text-gray-500 absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none" />
          </div>
        </div>

        {/* ===============================
            🔎 Input: Search Students
           =============================== */}
        <div className="flex flex-col md:flex-1">
          <label
            htmlFor="search-students"
            className="text-gray-700 mb-2 text-lg"
          >
            Search Students
          </label>
          <div className="relative w-full">
            <input
              type="text"
              id="search-students"
              placeholder="Name or matric number"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full bg-gray-50 text-gray-700 hover:bg-gray-100 transition-colors px-3 py-2 pr-10 rounded-xl border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-400"
            />
            {/* Search icon inside input */}
            <Search className="w-5 h-5 text-gray-500 absolute right-3 top-1/2 transform -translate-y-1/2" />
          </div>
        </div>

        {/* ===============================
            🟩 Button: Mark All Present
           =============================== */}
        <button
          onClick={handleMarkAllPresent}
          className="w-full md:w-auto text-gray-700 px-3 py-2 rounded-xl border border-gray-200 hover:bg-gray-100 transition-colors focus:outline-none"
        >
          Mark All Present
        </button>

        {/* ===============================
            ⬇️ Button: Download (dummy)
           =============================== */}
        <button className="w-full md:w-auto text-gray-700 px-3 py-2 rounded-xl border border-gray-200 hover:bg-gray-100 transition-colors flex items-center justify-center gap-2 focus:outline-none">
          <Download className="w-5 h-5" />
          <span className="hidden md:inline">Download</span>
        </button>
      </div>

      {/* ===============================
          📊 Attendance Summary Section
         =============================== */}
      <div className="mt-6 text-gray-700">
        <p>
          Total Registered: {details.length},{" "}
          Present: {details.filter((d) => d.status === "Present").length},{" "}
          Absent: {details.filter((d) => d.status === "Absent").length},{" "}
          Attendance Rate:{" "}
          {(
            (details.filter((d) => d.status === "Present").length /
              details.length) *
            100
          ).toFixed(0)}
          %
        </p>
      </div>

      {/* ===============================
          📋 Attendance Table Section
         =============================== */}
      <div className="overflow-x-auto rounded-md border border-gray-300 mt-10 px-4 py-1">
        <table className="min-w-full overflow-hidden">
          {/* ===== Table Headings ===== */}
          <thead className="text-left text-gray-600 text-sm divide-y divide-gray-200">
            <tr className="border-b border-gray-200">
              <th className="px-5 py-1 font-medium">Present</th>
              <th className="px-5 py-1 font-medium">Name</th>
              <th className="px-5 py-1 font-medium">Matric Number</th>
              <th className="px-5 py-1 font-medium">Department</th>
              <th className="px-5 py-1 font-medium">Track</th>
              <th className="px-5 py-1 font-medium">Event</th>
              <th className="px-5 py-1 font-medium">Status</th>
            </tr>
          </thead>

          {/* ===== Table Body (Dynamic Rows) ===== */}
          <tbody className="divide-y divide-gray-200 text-gray-700">
            {filteredDetails.map((detail) => (
              <tr key={detail.id}>
                {/* Checkbox for toggling attendance */}
                <td className="px-6 py-3">
                  <input
                    type="checkbox"
                    checked={detail.status === "Present"}
                    onChange={() => handleStatusToggle(detail.id)}
                    className="w-4 h-4 text-blue-600 focus:ring-blue-500"
                  />
                </td>
                {/* Student Details */}
                <td className="px-6 py-3 font-medium">{detail.name}</td>
                <td className="px-6 py-3 font-medium">{detail.matricNum}</td>
                <td className="px-6 py-3 font-medium">{detail.department}</td>
                <td className="px-6 py-3 font-medium">{detail.track}</td>
                <td className="px-6 py-3 font-medium">{detail.event}</td>

                {/* Status Badge */}
                <td className="px-6 py-3">
                  <span
                    className={`px-3 py-1 text-sm rounded-full ${
                      detail.status === "Present"
                        ? "bg-black text-white"
                        : "bg-gray-200 text-black"
                    }`}
                  >
                    {detail.status}
                  </span>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

// Exporting this component so it can be used in other parts of the app
export default Attendance;
